% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ircgetBooted.R
\name{irc.get.Booted}
\alias{irc.get.Booted}
\title{Item Response Curve data generator with bootstrapping for error estimation:}
\usage{
irc.get.Booted(data.alpha, data.num, nO = NULL, nRuns = 10)
}
\arguments{
\item{data.alpha}{An nS by nQ matrix or data frame of ALPHABETICAL data,
where nS is the number of students in the sample and nQ is the number of questions.}

\item{data.num}{An nS by nQ matrix or data frame of a dichotomous graded (0 or 1) sample,
where nS is the number of students in the sample and nQ is the number of questions.}

\item{nO}{The maximum number of options available on the assessment. Default it set to
find this value automatically given the response options present in the sample.
NOTE: This should almost never need to be changed from its default value!}

\item{nRuns}{Number of random samples to use in the bootstrapping (default = 10).
For publications it is recommended that 10,000 runs be performed since sample
error goes as 1/sqrt(nRuns).}
}
\value{
Plotting data for item response curves. To be put into the ircPlotErrorBars()
or ircPlotErrorBounds() functions.

     $means The mean values from bootstrapping.

     $stDevs The standard deviation values from bootstrapping.
}
\description{
Calculates the plotting data needed to create item response curves
for the items on an assessment using a given sample and bootstrapping. Can be
used to plot item response curves with error bars/bounds.
}
\examples{
# Pull in PIQL data from AWS and get some course data.
PIQLdata <- pullPQLdata()
temp.piql.data <- PIQLdata$courses
data.alpha <- temp.data$data.alpha
data.num <- temp.data$data.num

# Get irc data with default values.
irc.data.booted <- irc.get.Booted(data.alpha,data.num)
irc.data.booted$means # Mean values
irc.data.booted$stDevs # Standard deviation values.

# Plot item 2.
irc.plot.withErrorBars(irc.data.booted, 2)
irc.plot.withErrorBounds(irc.data.booted,2)

# Get irc data and plot item 2 with a larger bootstrapping
irc.data.booted <- irc.get.Booted(data.alpha,data.num, nRuns = 100)
irc.plot.withErrorBars(irc.data.booted, 2)
irc.plot.withErrorBounds(irc.data.booted,2)
}
