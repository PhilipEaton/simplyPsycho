% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cttDiscrimination.R
\name{cttDiscrimination}
\alias{cttDiscrimination}
\title{CTT Discrimination of multiple courses with bootstrapping for error estimation and plotting:}
\usage{
cttDiscrimination(
  data,
  perc = 0.27,
  booted = FALSE,
  nRuns = 100,
  plotBarChart = FALSE
)
}
\arguments{
\item{data}{Can be either

1) An nS by nQ matrix or data frame of a dichotomous graded (0 or 1) sample,
where nS is the number of students in the sample and nQ is the number of questions,

2) The output of piql.data.select with one or multiple courses selected.}

\item{perc}{Top and bottom percentage to be compared (default = 0.27).}

\item{booted}{Logical (default = FALSE). FALSE means no bootstrapping will be
performed. TRUE turns on the bootstrapping feature.}

\item{nRuns}{Number of random samples to use in the bootstrapping (default = 100).
For publications it is recommended that 10,000 runs be performed since sample
error goes as 1/sqrt(nRuns).}

\item{plotBarChart}{(Default = FALSE). Generate barchart. If bootstrapping was
performed, then error bars wll be automatically added (+- 1 standard deviation).}
}
\value{
When booted = FALSE (the default setting) then the straight calculated
value will be returned. If booted = TRUE, the function will output the mean and
standard deviation for the CTT item discrimination calculated from nRuns randomly sampled
with replacement data sets from the given sample.
}
\description{
Calculate Classical Test Theory item discrimination for the items on
an assessment using a given sample.
}
\examples{
# Pull in PIQL data from AWS and get some course data.
PIQLdata <- pullPIQLdata()
temp.data <- piql.data.select(PIQLdata, course = 2, numBlanks.allowed = 0)
data.num <- temp.data$data.num

# Straight item discrimination
cttDiscrimination(data.num)

# Booted using 100 random samples (default)
cttDiscrimination(data.num, booted = TRUE)

# Booted using 1000 random samples by manually setting nRuns
cttDiscrimination(data.num, booted = TRUE, nRuns = 1000)
}
